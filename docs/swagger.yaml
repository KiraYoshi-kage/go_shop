basePath: /api
definitions:
  handler.CreateProductRequest:
    properties:
      description:
        example: 最新款iPhone
        type: string
      name:
        example: iPhone 15
        type: string
      price:
        example: 6999
        type: number
      stock:
        example: 100
        minimum: 0
        type: integer
    required:
    - name
    - price
    - stock
    type: object
  handler.ErrorResponse:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: 参数错误
        type: string
    type: object
  handler.ListResponse:
    properties:
      data: {}
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  handler.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: testuser
        type: string
    required:
    - password
    - username
    type: object
  handler.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIs...
        type: string
    type: object
  handler.ProductResponse:
    properties:
      created_at:
        example: "2023-12-20T10:00:00Z"
        type: string
      description:
        example: 最新款iPhone
        type: string
      id:
        example: 1
        type: integer
      name:
        example: iPhone 15
        type: string
      price:
        example: 6999
        type: number
      stock:
        example: 100
        type: integer
    type: object
  handler.RegisterRequest:
    properties:
      password:
        example: password123
        maxLength: 32
        minLength: 6
        type: string
      username:
        example: testuser
        maxLength: 32
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  handler.RegisterResponse:
    properties:
      message:
        example: 注册成功
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  handler.Response:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: success
        type: string
    type: object
  handler.UserInfo:
    properties:
      id:
        example: 1
        type: integer
      username:
        example: testuser
        type: string
    type: object
  model.Order:
    type: object
  model.OrderItem:
    properties:
      id:
        description: 订单项ID，主键
        type: integer
      orderID:
        description: 订单ID，外键
        type: integer
      price:
        description: 商品单价
        type: number
      productID:
        description: 商品ID，外键
        type: integer
      quantity:
        description: 购买数量
        type: integer
    type: object
  model.Product:
    properties:
      category_id:
        type: integer
      created_at:
        example: "2023-12-20T10:00:00Z"
        type: string
      description:
        example: 最新款iPhone
        type: string
      id:
        example: 1
        type: integer
      name:
        example: iPhone 15
        type: string
      price:
        example: 6999
        type: number
      status:
        description: '1: 上架 2: 下架'
        example: 1
        type: integer
      stock:
        example: 100
        type: integer
      updated_at:
        example: "2023-12-20T10:00:00Z"
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: MyShop电商系统API文档
  title: MyShop API
  version: "1.0"
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: 获取当前用户的订单列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 订单列表
          schema:
            allOf:
            - $ref: '#/definitions/handler.ListResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Order'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 获取用户订单列表
      tags:
      - 订单管理
    post:
      consumes:
      - application/json
      description: 创建新订单
      parameters:
      - description: 订单信息
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/model.Order'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 参数错误
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 未授权
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 库存不足
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: 创建订单
      tags:
      - 订单管理
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: 获取订单详细信息
      parameters:
      - description: 订单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
        "404":
          description: 订单不存在
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: 获取订单详情
      tags:
      - 订单管理
  /products:
    get:
      consumes:
      - application/json
      description: 获取商品列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 商品列表
          schema:
            allOf:
            - $ref: '#/definitions/handler.ListResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Product'
                  type: array
              type: object
      summary: 获取商品列表
      tags:
      - 商品管理
    post:
      consumes:
      - application/json
      description: 创建新商品（需要管理员权限）
      parameters:
      - description: 商品信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/handler.ProductResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - Bearer: []
      summary: 创建商品
      tags:
      - 商品管理
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定商品
      parameters:
      - description: 商品ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 商品不存在
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: 删除商品
      tags:
      - 商品管理
    get:
      consumes:
      - application/json
      description: 根据ID获取商品详情
      parameters:
      - description: 商品ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "404":
          description: 商品不存在
          schema:
            additionalProperties: true
            type: object
      summary: 获取商品详情
      tags:
      - 商品管理
    put:
      consumes:
      - application/json
      description: 更新商品信息
      parameters:
      - description: 商品ID
        in: path
        name: id
        required: true
        type: integer
      - description: 商品信息
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/model.Product'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 参数错误或商品不存在
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 参数错误或商品不存在
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: 更新商品
      tags:
      - 商品管理
  /user/info:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的信息（仅返回ID和用户名）
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserInfo'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - Bearer: []
      summary: 获取用户信息
      tags:
      - 用户管理
  /user/login:
    post:
      consumes:
      - application/json
      description: 使用用户名和密码登录获取token
      parameters:
      - description: 用户名和密码
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LoginResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: 用户登录
      tags:
      - 用户管理
  /user/register:
    post:
      consumes:
      - application/json
      description: 创建新用户账号（仅需用户名和密码）
      parameters:
      - description: 用户名和密码
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.RegisterResponse'
        "400":
          description: 参数错误或用户名已存在
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: 用户注册
      tags:
      - 用户管理
securityDefinitions:
  Bearer:
    description: '在请求头中添加 Authorization: Bearer {token} 进行身份验证'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
